<launch>
    <!-- Set to true to debug -->
    <arg name="debug" default="false" />
    <!-- Set to true to allow planning trajectories-->
    <arg name="use_moveit" default="true"/>
    <!-- Set to false if you want to start without guis -->
    <arg name="gui" default="true"/>
    <!--Choose planner library, options are ompl, stomp or sbpl-->
    <arg name="planning" default="ompl"/>
    <!--Should the planner yaml be automatically generated? -->
    <arg name="generate_planning_config" default="true"/>
    <!-- The robot state publisher publishing frequency  -->
    <arg name="robot_state_pub_frequency" default="250"/>
    <!-- The joint state publisher publishing frequency  -->
    <arg name="joint_state_pub_frequency" default="125"/>
    <!-- The path of your mujoco license  -->
    <arg name="key_path" default="/home/yee/.mujoco/mujoco200/bin/mjkey.txt"/>
    <!-- Loads the robot description -->
    <arg name="robot_description" default="$(find bulldog_mujoco_ros)/ros_models/urdfs/ur5e_robotiq_2f_85.urdf.xacro" />
    <!-- <arg name="robot_config_file" default="$(find sr_multi_moveit_config)/config/robot_configs/right_sh_ur10.yaml"/> -->
    <arg name="mujoco_model_filename" default="$(find bulldog_mujoco_ros)/mujoco_models/ur5e_robotiq_2f_85.xml" />
    
    <param if="$(eval arg('robot_description').endswith('.xacro'))" name="robot_description" command="xacro --inorder $(arg robot_description)"/>
    <rosparam if="$(eval not arg('robot_description').endswith('.xacro'))" param="robot_description" command="load" file="$(arg robot_description)"/>

    <!-- Publish joint state -->
    <rosparam command="load" file="$(find bulldog_mujoco_ros)/config/ur5_joint_state_controller.yaml" />
    <param name="joint_state_controller/publish_rate" value="$(arg joint_state_pub_frequency)"/>
    <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller" />

    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="false"/>
        <rosparam param="/source_list">[/joint_states]</rosparam>
    </node> -->

    <!-- Publish robot state (tf transforms) -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
        <param name="publish_frequency" value="$(arg robot_state_pub_frequency)" />
        <param name="tf_prefix" value="" />
    </node>
 
    <!-- Launch mujoco ros control -->
    <rosparam command="load" file="$(find bulldog_mujoco_ros)/config/ur5_joint_initial_states.yaml" />
    <include file="$(find mujoco_ros_control)/launch/mujoco_ros_control.launch">
        <arg name="robot_model_path" value="$(arg mujoco_model_filename)"/>
    </include>

    <!-- MOVEIT -->
    <group if="$(arg use_moveit)">
        <include file="$(find bulldog_mujoco_ros)/launch/ur5_moveit_planning_and_execution.launch">
            <arg name="load_robot_description" value="false"/>
            <arg name="debug" value="$(arg debug)"/>
            <arg name="gui" value="$(arg gui)"/>
            <arg name="planning" value="$(arg planning)"/>
        </include>
    </group>

    <!-- Control -->
    <!--Arm Controller -->
    <rosparam file="$(find mujoco_ros_control)/config/mujoco_ros_control_params.yaml" command="load"/>
    <rosparam command="load" file="$(find bulldog_mujoco_ros)/config/ur5e_robotiq_2f_85_trajectory_controller.yaml"/>
    <node name="spawn_ur5_controller" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="ur5_trajectory_controller"/>
</launch>
