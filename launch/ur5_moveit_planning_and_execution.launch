<launch>
  <arg name="planning" default="ompl"/>
  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find ur5e_robotiq_2f_85_moveit_config)/default_warehouse_mongo_db" />
  <arg name="debug" default="false"/>
  <arg name="load_robot_description" default="true"/>
  <arg name="use_rviz" default="true"/>
  <arg name="gui" default="true"/>

  <!-- The name of the rviz config file to load -->
  <arg name="rviz_config_file" default="$(find bulldog_mujoco_ros)/config/moveit.rviz"/>

  <!-- remap moveit trajectory execution to trajectory command controller -->
  <!-- <remap from="/follow_joint_trajectory" to="/ur5e_robotiq_2f_85_trajectory_controller/follow_joint_trajectory"/> -->

  <!-- remap moveit gripper command to gripper action controller-->
  <!-- <remap from="/gripper_cmd" to="/ur5e_robotiq_2f_85_gripper_controller/gripper_cmd"/> -->

  <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
  </include>

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(arg rviz_config_file)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

  <!-- <remap from="/follow_joint_trajectory" to="$(arg trajectory_controller_prefix)/follow_joint_trajectory"/> -->

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include> -->

  <!-- Update joint limits -->
  <!-- <group ns="robot_description_planning">
    <rosparam command="load" file="$(find bulldog_mujoco_ros)/config/joint_limits.yaml"/>
  </group> -->

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <!--
  <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
  -->

  <!-- If database loading was enabled, start mongodb as well -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)"/> -->

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
  </include> -->

  <!-- If needed, broadcast static tf for robot root -->
  

  <!-- We do not have a robot connected, so publish fake joint states -->
  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg use_gui)">
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    <rosparam param="source_list">[/joint_states]</rosparam>
  </node>
  <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    <rosparam param="source_list">[/joint_states]</rosparam>
  </node> -->

  <!-- Given the published joint states, publish tf for the robot links -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /> -->

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>   -->

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find ur5e_robotiq_2f_85_moveit_config)/launch/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include> -->

  <!-- If database loading was enabled, start mongodb as well -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)" /> -->

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt's "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <!-- <arg name="use_gui" default="false" /> -->
  <!-- <arg name="use_rviz" default="true" /> -->

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
  </include> -->

  <!-- If needed, broadcast static tf for robot root -->

  <!-- Given the published joint states, publish tf for the robot links -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /> -->

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
  </include> -->

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(find ur5e_robotiq_2f_85_moveit_config)/launch/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include> -->

  <!-- If database loading was enabled, start mongodb as well -->
  <!-- <include file="$(find ur5e_robotiq_2f_85_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include> -->
</launch>
